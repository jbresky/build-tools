<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles.css">
    <link rel="icon" href="/building.ico">
    <title>Build Tools</title>
    <script src="/dist/main.js"></script>
</head>

<body>
    <div class="app">
        <a href="/webpack">
            <h1 class="tool-names">Webpack</h1>
        </a>
        <a href="/esbuild">
            <h1 class="tool-names">Esbuild</h1>
        </a>
        <a href="/parcel">
            <h1 class="tool-names">Parcel</h1>
        </a>
        <a href="/vite">
            <h1 class="tool-names">Vite</h1>
        </a>
    </div>
    <main>
        <div class="comparatives">

            <h1 class="title">Which build tool should I use for my project?</h1>
            <h2>Webpack</h2>
            <p>Webpack is ideal for more complex projects that use a variety of non-JavaScript assets or require a good
                amount of custom configuration. If your application uses a lot of stylesheets, fonts, and images, and
                requires special configuration for entry points and servers, then Webpack is the way to go!</p>

            <h2>Parcel</h2>

            <p>Parcel is ideal for projects that require some support for a variety of dependencies and frameworks
                without the need for advanced configurations since Parcel’s strength lies in its ability to build
                projects with little work on the developer’s end. Parcel is great for quickly building small prototypes
                that run with minimal configuration.</p>

            <h2>Esbuild</h2>

            <p>Esbuild’s extremely fast bundling makes it easy to quickly build projects that don’t require extra
                configuration, dependencies, and plugins. esbuild is also optimal for simpler applications because of
                its lack of support for many common out-of-the-box features such as plugins, front-end languages, and
                HMR.</p>

            <h2>Vite</h2>

            <p>Vite is ideal for projects that utilize the dev server and different frameworks without needing too much
                additional configuration. Moreover, Vite scales well for any size application, whether it is a single
                webpage or a complex web application with many components. Since Vite only updates modules on-demand,
                live reloading times will remain optimized no matter the application size. However, keep in mind that
                Vite only supports ES modules.</p>
        </div>
    </main>
</body>

</html>