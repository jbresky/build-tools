<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/styles.css">
    <link rel="icon" href="/building.ico">
    <title>Webpack</title>
    <script src="/dist/main.js"></script>
</head>

<body>
    <main>
        <p class="tool-description"><i>Webpack is a popular bundler with a rich feature set that is able to be
                configured for a wide variety of
                Javascript Applications.</i></p>

        <div style="text-align: center; margin: 2rem 0;">
            <img src="/webpack.png" width="200" style="border-radius: 20px; object-fit: cover">
        </div>
        <h2>Main distinguishing features</h2>

        <h3>Custom configuration</h3>
        <p>
            We can customize the various build settings of our Webpack application, including settings and properties
            for
            custom plugins, servers, caching, and modules. Webpack’s built-in custom configuration capabilities enable
            developers to build a wide range of complex applications, small and large, with few limitations.</p>

        <h3>Support for a variety of module types and languages</h3>
        <p>
            Webpack conveniently supports many module types, including ECMAScript, CommonJS, and AMD modules, whereas
            other
            build tools like Vite only support ES modules. Moreover, Webpack uses loaders to support a number of
            non-native
            (non-JavaScript) modular programming languages, such as CoffeeScript, TypeScript, Babel, LESS, and Sass.
            Loaders
            are responsible for transforming a module’s non-native files into familiar assets like JavaScript and CSS
            and
            “load” these files so that your application can use them. Webpack even allows you to write your own custom
            loader.
        </p>
        <div class="footer">
            <a href="/parcel">Parcel</a>
            <a href="/esbuild">Esbuild</a>
            <a href="/vite">Vite</a>
        </div>
    </main>
</body>

</html>